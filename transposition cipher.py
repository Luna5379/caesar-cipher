ciphertext = "JDEFOIOLWILONUONGPYULAORSMSSTEAETHGIOGTIUHSOLDHUSNYOEDUHATTETCEDAHIIALTSETRFTERMAIOMSEOTITHPOVERIECEDNBACHRNOPNKFIETNSROSNVIETAIELWRESNRSIELTOPYAEORRPTHCHWIIAEBHVENNAEUBEOLLTOAERCTEDNGAIBTEEEWNHLITENSTHEIIKECNWAASUNSMTATEHMIIEASHDOMACMSIOISNDUREFTEINHRVSIGETAINSTOFLOWOLIGECNREPOFITTEEPHROTNIROSEANLSDHTSTAHWSCEAOTNUNIIGOFNTUDHENTEQIRNUYHUGTOHANOIMTUEHSROSEMWHAAEDNGTAONHTAIRALBRASSINAAYPLRIKRTNEOSUSNMTAEBHVEIVELEDHTSTAHWSGEAODOROFHREBEDTSHEATRIAFESIEULLFLFNCOERPEDYTCMUNOMIAIOCTNBTWSEENHEETMOHFBTOLWILONUONGPTILEHSTEANTRDTINIHKEILWWLEUSBBYRAKBEIGHONTSCPHEIESVERORHNETEXFWWTEEKTHESEOSEMRSOEDLWMDWNEOBTEVUIETALNULMNAYAGDOCETRCTHAKEIHECPRNERUDNAHTETHCDEEOADCANINRMIPOSTATEHYUILOWLIDTFNHCNTEOETINNSTRSTEEIGAINMSEPEISLEOULDTHTSWAHTOUEHGTIGHMHHVETABEGOENIGNBNOUIONTWDRFSEIHWSMEAISNGSISMTHOEIGMPNIOTNTRASEINHHTDTIEATNHEITPRSEHAIASHWSOKDTCEOERAHABUTHOTEIUASTTOOFINMEPLYMOETHYROGSHUHEOSNDEOEPATXNOTHDNANRDTOOSHEESFLOWOLTATHHTOGTTUHOTNAISTRLCUAOCUSNLINAVOHIGARNCREOUIDTYWNMOEQIRNUISITEWHOTECNMOARPRYAKRBNEODSCRIICLTSERHAATTHSITETAIOUTNHRESEFREDERTITHOSEIANFNCADIILFIULFCTTATYHRGRSOEMNIOETNDNOEIUERLRAIRILEFEHSASIMIIOBTNAMUWSCLRGHAETANRHHSUDIBGTNDEAIOCUTCRTMESOTAPEHTRASTHPHRASEEOFRTNOHVLUEAAINATONTENDHEPLIWOCWSTYAOLOWALHMOSITTGATAEHFIFETHWSIEANEGULAEIHIWTSETHLSEHMANEYAEPHVLNEDANTSLLOESMOFOETEORHMEAUAVLBETELIMFOMSRTEIBHLRRATAYANCKKODWPRONIEOTCTHAREELSODDFRELRSAEADOCNTLIONAMTENSHIUACERNTIWOHSUDLLLAOHMTWIOAOFPYFIDEHSBSNDTATFNDOUHSAMICPINYAGOMGHUITBECOJTHTHTAEOLDCUHVACAEHEEDIVMROROELSTHESEAEOSMUCMETOBSLLYEIGHENTBOSAOKTAEVFCAUBULETAINHVGOSTBAEFRSDOOEIMMTEBUTAOTEREHTAUESSRMIIEASHDCQAAURDFIEOHMIRITOLDWUHVBEAEEITENNNEYESLMARABRSIGTSNOITOGFNYHELTLWRVOEAUDPLEATOFRSTEOLHCLCIOETNOHETTCTTHIYEEASRWASTHLOEIKTRSHTUYABESOURWLHVEDABEALENETDTREOINEHSETSEDOLADTLNHTHEATRSLTEUIGRINPCWULEODAEBHVENOWELETANRHTENSHIUACERNVLATAUINTWOIOLCEUDRANLTIYAEBHVENDAEANEOUGRSTATSREYUTGBPRAPEHSHRITESWSWKAOTTARHKNTHIGEHDEROILNDSAEETOLCRTWEAERNTMEOUHIVCGETVONOTNFOIGRAKRBNUTESPSPCALEILTOSYHEHSEWODBSWETEECCRAUUATMLEATHDTEADTCRALOFBECUSEORIRGEFORWSBSAEIDAHNSHMECETDFROEADHEUTISRENURTENSHIISTTSRNETAGHTEWAHATDTNEHRBBEOEYNVRIETGASITOENINDDUTEBRMMBEEETATRHNBOKOOSEEAWRCULLTAYTLESONOOSSNINFIGICNCLATAMOUICLAISDREIHNWTOOSIPSBEAILGNTAKIMESNSSEEHTHTAEOLDWUWNTHATEHLEWOSRYAORFARFFIOGTTROEFRTNUHRNVEIETGASITOMIINGTASHEIYAVLHERUGBOHHSRTIOENTLIHTEFEHTOIGTLHPRMTEAETLNNYPILSOIGISNHEETILCOCANNHCSNDEAPRAPEHSVNLEEEDNGAITAPEOSLOINLFCRERACAINITOLOFOOKRADTWROERIHANYURGOTOGHHUTTESSHEDESILPCLAEUTOSIINAEJOMNYNMYIGHLDAOIYETWBSIHSHSEARRY"
plaintext = [" " for i in range(len(ciphertext))]
key = [0, 4, 1, 5, 2, 3, 6, 10, 7, 11, 8, 9]
print(plaintext)
for i in range(0, len(ciphertext), 12):
    plaintext[i] = ciphertext[i]
    if (i+1) < len(ciphertext):
        plaintext[i+1] = ciphertext[i+key[1]]
        if (i+2) < len(ciphertext):
            plaintext[i+2] = ciphertext[i+key[2]]
            if (i+3) < len(ciphertext):
                plaintext[i+3] = ciphertext[i+key[3]]
                if (i+4) < len(ciphertext):
                    plaintext[i+4] = ciphertext[i+key[4]]
                    if (i+5) < len(ciphertext):
                        plaintext[i+5] = ciphertext[i+key[5]]
                        if (i+6) < len(ciphertext):
                            plaintext[i+6] = ciphertext[i+key[6]]
                            if (i+7) < len(ciphertext) and (i+10) < len(ciphertext):
                                plaintext[i+7] = ciphertext[i+key[7]]
                                if (i+8) < len(ciphertext):
                                    plaintext[i+8] = ciphertext[i+key[8]]
                                    if (i+9) < len(ciphertext):
                                        plaintext[i+9] = ciphertext[i+key[9]]
                                        if (i+10) < len(ciphertext):
                                            plaintext[i+10] = ciphertext[i+key[10]]
                                            if (i+11) < len(ciphertext):
                                                plaintext[i+11] = ciphertext[i+key[11]]
for j in range(len(plaintext)):
    print(plaintext[j], end='')
